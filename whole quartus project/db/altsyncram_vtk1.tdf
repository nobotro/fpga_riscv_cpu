--altsyncram CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" CLOCK_ENABLE_INPUT_A="BYPASS" CLOCK_ENABLE_OUTPUT_A="BYPASS" CYCLONEII_M4K_COMPATIBILITY="ON" DEVICE_FAMILY="Cyclone IV E" ENABLE_RUNTIME_MOD="YES" INIT_FILE="rom.mif" INSTANCE_NAME="ram" LOW_POWER_MODE="AUTO" NUMWORDS_A=1 OPERATION_MODE="SINGLE_PORT" OUTDATA_ACLR_A="NONE" OUTDATA_REG_A="CLOCK0" POWER_UP_UNINITIALIZED="FALSE" RAM_BLOCK_TYPE="M9K" read_during_write_mode_port_a="NEW_DATA_NO_NBE_READ" WIDTH_A=32 WIDTH_BYTEENA_A=1 WIDTHAD_A=1 address_a clock0 data_a q_a wren_a CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 18.1 cbx_altera_syncram_nd_impl 2019:04:11:16:03:27:SJ cbx_altsyncram 2019:04:11:16:03:28:SJ cbx_cycloneii 2019:04:11:16:03:28:SJ cbx_lpm_add_sub 2019:04:11:16:03:28:SJ cbx_lpm_compare 2019:04:11:16:03:28:SJ cbx_lpm_decode 2019:04:11:16:03:28:SJ cbx_lpm_mux 2019:04:11:16:03:28:SJ cbx_mgl 2019:04:11:18:00:57:SJ cbx_nadder 2019:04:11:16:03:28:SJ cbx_stratix 2019:04:11:16:03:28:SJ cbx_stratixii 2019:04:11:16:03:28:SJ cbx_stratixiii 2019:04:11:16:03:28:SJ cbx_stratixv 2019:04:11:16:03:28:SJ cbx_util_mgl 2019:04:11:16:03:28:SJ  VERSION_END


-- Copyright (C) 2019  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.


FUNCTION altsyncram_n4b2 (address_a[0..0], address_b[0..0], clock0, clock1, data_a[31..0], data_b[31..0], wren_a, wren_b)
RETURNS ( q_a[31..0], q_b[31..0]);
FUNCTION sld_mod_ram_rom (data_read[31..0])
WITH ( CVALUE, IS_DATA_IN_RAM, IS_READABLE, NODE_NAME, NUMWORDS, SHIFT_COUNT_BITS, WIDTH_WORD, WIDTHAD)
RETURNS ( address[0..0], data_write[31..0], enable_write, tck_usr);

--synthesis_resources = M9K 2 sld_mod_ram_rom 1 
SUBDESIGN altsyncram_vtk1
( 
	address_a[0..0]	:	input;
	clock0	:	input;
	data_a[31..0]	:	input;
	q_a[31..0]	:	output;
	wren_a	:	input;
) 
VARIABLE 
	altsyncram1 : altsyncram_n4b2;
	mgl_prim2 : sld_mod_ram_rom
		WITH (
			CVALUE = "00000000000000000000000000000000",
			IS_DATA_IN_RAM = 1,
			IS_READABLE = 1,
			NODE_NAME = 1918987520,
			NUMWORDS = 1,
			SHIFT_COUNT_BITS = 6,
			WIDTH_WORD = 32,
			WIDTHAD = 1
		);

BEGIN 
	altsyncram1.address_a[] = address_a[];
	altsyncram1.address_b[] = mgl_prim2.address[];
	altsyncram1.clock0 = clock0;
	altsyncram1.clock1 = mgl_prim2.tck_usr;
	altsyncram1.data_a[] = data_a[];
	altsyncram1.data_b[] = mgl_prim2.data_write[];
	altsyncram1.wren_a = wren_a;
	altsyncram1.wren_b = mgl_prim2.enable_write;
	mgl_prim2.data_read[] = altsyncram1.q_b[];
	q_a[] = altsyncram1.q_a[];
END;
--VALID FILE
